workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "c55a6a2af2d3d155dc741c7bc74652b7b05442f0dfa7c5e00e73cefc8fc8e387",
    strip_prefix = "abseil-cpp-c7cf999bda8390d2dd294ef903716a80135e6f4c",
    urls = ["https://github.com/abseil/abseil-cpp/archive/c7cf999bda8390d2dd294ef903716a80135e6f4c.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "307ccaebc77e0acd19d1d09fe856278a66d1936269a999d40accdb46ec3ab6a4",
    strip_prefix = "googletest-35d0c365609296fa4730d62057c487e3cfa030ff",
    urls = ["https://github.com/google/googletest/archive/35d0c365609296fa4730d62057c487e3cfa030ff.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "d59dc826451f34904eda26d919e7aff01680ab8b0f33a0191120c78fd07ebb5b",
    strip_prefix = "protobuf-5d0865cf1537772b8e0969563402654087b40d31",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/5d0865cf1537772b8e0969563402654087b40d31.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "74d373588de2ca06f51cba28f8afcd822e79a755d86db10076e025e216461b92",
    strip_prefix = "gflags-3c4399ba468e71947ca8945daa4dc274007c5e9b",
    urls = ["https://github.com/gflags/gflags/archive/3c4399ba468e71947ca8945daa4dc274007c5e9b.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "566f95b2427efc0ef8926d2df167cc77ccba55c06f206abc02e8c17081fa5ffd",
    strip_prefix = "re2-6dcd83d60f7944926bfd308cc13979fc53dd69ca",
    urls = ["https://github.com/google/re2/archive/6dcd83d60f7944926bfd308cc13979fc53dd69ca.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "36d3a772fc4d89902affd73f15b3ace51886b4d597c02b579dabf28aa6aee540",
    strip_prefix = "rules_cc-5be90a4e04e64df0e9d26382e1006d3df21aaa91",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/5be90a4e04e64df0e9d26382e1006d3df21aaa91.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "5d4aa7f27bd39d3e2bfd74ecbfe0380ab0ac8c1e08fcdbd2f1cb6b144faec95a",
    strip_prefix = "rules_proto-c138c719d7bdca9805d6974c9b3a40ebf40fb840",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/c138c719d7bdca9805d6974c9b3a40ebf40fb840.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/c138c719d7bdca9805d6974c9b3a40ebf40fb840.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "b89f958238e0ac9c5747e2c3f982a89f4ae92a138d48153508fa2b148d257489",
    strip_prefix = "emsdk-6abe5123c34a7751a2d5b679e856b2591ba04145/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/6abe5123c34a7751a2d5b679e856b2591ba04145.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "303f99eb72c47a23a28b8bda1b2c5c14fae4f81788667fb36513a8ab5aaa02a7",
    strip_prefix = "closure-library-b312823ec5f84239ff1db7526f4a75cba0420a33",
    urls = ["https://github.com/google/closure-library/archive/b312823ec5f84239ff1db7526f4a75cba0420a33.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "12f1169ebe782f8631fcb8da81aa12ba192f8952875b4a1e8f20c49fc6e10223",
    strip_prefix = "rules_closure-0.14.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
